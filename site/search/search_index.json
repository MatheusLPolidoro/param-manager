{"config":{"lang":["pt"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Biblioteca ParamManager","text":""},{"location":"#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Biblioteca Python orientada a objetos que implementa o padr\u00e3o Singleton para interagir com a API de par\u00e2metros. A biblioteca oferece funcionalidades de cache, armazenamento local com TinyDB e fallback autom\u00e1tico em caso de indisponibilidade da API.</p>"},{"location":"#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Padr\u00e3o Singleton: Garante que exista apenas uma inst\u00e2ncia da classe de acesso \u00e0 API</li> <li>Cache: Armazena resultados em mem\u00f3ria por at\u00e9 1 hora para reduzir chamadas \u00e0 API</li> <li>Armazenamento Local: Usa TinyDB para persistir dados localmente</li> <li>Fallback Autom\u00e1tico: Utiliza dados locais quando a API est\u00e1 indispon\u00edvel</li> <li>Recupera\u00e7\u00e3o de Par\u00e2metros: Permite buscar todos os par\u00e2metros de um app ou um par\u00e2metro espec\u00edfico</li> </ul>"},{"location":"#instalacao","title":"Instala\u00e7\u00e3o","text":"<pre><code>pip install param-manager\n</code></pre>"},{"location":"#uso-basico","title":"Uso B\u00e1sico","text":"<pre><code>from param_manager import ParamManager\n\n# Obter a inst\u00e2ncia do gerenciador\nparam_manager = ParamManager.get_instance()\n\n# Recuperar todos os par\u00e2metros de um app\nparams = param_manager.get_all_params('nome_do_app')\n\n# Recuperar um par\u00e2metro espec\u00edfico\nparam = param_manager.get_param('nome_do_app', 'NOME_PARAMETRO')\n\n# Limpar o cache para um app espec\u00edfico\nparam_manager.clear_cache('nome_do_app')\n\n# Obter informa\u00e7\u00f5es sobre o cache atual\ncache_info = param_manager.get_cache_info()\n</code></pre>"},{"location":"#configuracao-avancada","title":"Configura\u00e7\u00e3o Avan\u00e7ada","text":"<pre><code># Configurar com URL de API personalizada, dura\u00e7\u00e3o de cache e timeout\nparam_manager = ParamManager.get_instance(\n    api_url=\"http://minha-api.exemplo.com\",\n    cache_duration=1800,  # 30 minutos\n    timeout=10  # 10 segundos\n)\n</code></pre>"},{"location":"#comportamento-de-fallback","title":"Comportamento de Fallback","text":"<p>Quando a API est\u00e1 indispon\u00edvel, a biblioteca automaticamente: 1. Tenta acessar a API 2. Em caso de falha, busca dados do armazenamento local 3. Retorna os dados mais recentes dispon\u00edveis localmente</p>"},{"location":"#estrutura-de-arquivos","title":"Estrutura de Arquivos","text":"<ul> <li><code>param_manager.py</code>: Implementa\u00e7\u00e3o principal da biblioteca</li> <li><code>test_param_manager.py</code>: Testes unit\u00e1rios para validar o funcionamento</li> <li><code>requirements.txt</code>: Depend\u00eancias necess\u00e1rias</li> <li><code>requirements-dev.txt</code>: Depend\u00eancias de desenvolvimento necess\u00e1rias</li> </ul>"},{"location":"#layout-do-projeto","title":"Layout do Projeto","text":"<pre><code>\u251c\u2500\u2500\u2500param_manager\n\u2502   \u2502   manager.py\n\u2502   \u2514\u2500\u2500\u2500__init__.py\n</code></pre>"},{"location":"#dependencias","title":"Depend\u00eancias","text":"<ul> <li>Python 3.6+</li> <li>requests</li> <li>tinydb</li> </ul>"},{"location":"#changelogs","title":"Changelogs","text":"<p>Vers\u00e3o 0.1.6 (2025-06-19)</p>"},{"location":"#correcoes","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Corre\u00e7\u00e3o de utiliza\u00e7\u00e3o de cache caso a API esteja fora do ar.</li> </ul> <p>Vers\u00e3o 0.1.5 (2025-06-05)</p>"},{"location":"#correcoes_1","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Corrigido leitura de par\u00e2metros unit\u00e1rios ao realizar consulta pelo m\u00e9todo get_param.</li> </ul> <p>Vers\u00e3o 0.1.4 (2025-06-01)</p>"},{"location":"#correcoes_2","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Corre\u00e7\u00e3o de salvamento de arquivo db local com op\u00e7\u00e3o de passar o path.</li> </ul> <p>Vers\u00e3o 0.1.3 (2025-05-30)</p>"},{"location":"#correcoes_3","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Corre\u00e7\u00e3o de url na requisi\u00e7\u00e3o de todos os parametros e altera\u00e7\u00e3o de salvamento de db local para pasta da biblioteca.</li> </ul> <p>Vers\u00e3o 0.1.2 (2025-05-27)</p>"},{"location":"#correcoes_4","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Corrigido salvamente em DB local para chamada de parametro unitario.</li> </ul> <p>Vers\u00e3o 0.1.0 (2025-05-23)</p>"},{"location":"#novas-funcionalidades","title":"NOVAS FUNCIONALIDADES","text":"<ul> <li>Adicionado sistema de cache global para par\u00e2metros de aplica\u00e7\u00f5es, reduzindo chamadas \u00e0 API e melhorando performance.</li> <li>Adicionado sistema de fallback para TinyDB, permitindo acesso a par\u00e2metros mesmo quando a API est\u00e1 indispon\u00edvel.</li> <li>Adicionados m\u00e9todos para limpeza de cache (global, por aplica\u00e7\u00e3o e por par\u00e2metro espec\u00edfico), permitindo controle granular sobre dados em cache.</li> <li>Implementada integra\u00e7\u00e3o com API de par\u00e2metros, permitindo recupera\u00e7\u00e3o de dados de configura\u00e7\u00e3o de forma centralizada.</li> <li>Implementado cache espec\u00edfico por par\u00e2metro individual, permitindo consultas mais eficientes para par\u00e2metros frequentemente acessados.</li> <li>Implementado padr\u00e3o Singleton para garantir uma \u00fanica inst\u00e2ncia do gerenciador de par\u00e2metros, evitando m\u00faltiplas conex\u00f5es e caches redundantes.</li> </ul>"},{"location":"#otimizacoes","title":"OTIMIZA\u00c7\u00d5ES","text":"<ul> <li>Adicionado sistema de logging integrado para rastreamento de opera\u00e7\u00f5es e diagn\u00f3stico de problemas.</li> <li>Implementada configura\u00e7\u00e3o flex\u00edvel para URL da API, dura\u00e7\u00e3o de cache e timeout, permitindo personaliza\u00e7\u00e3o conforme necessidades espec\u00edficas.</li> <li>Implementado m\u00e9todo get_cache_info() para inspe\u00e7\u00e3o do estado atual do cache, facilitando diagn\u00f3stico e depura\u00e7\u00e3o.</li> </ul>"},{"location":"#diagrama-de-classes","title":"Diagrama de Classes","text":"<pre><code>classDiagram\n    class ParamManager {\n        - __instance: Optional~ParamManager~\n        - _api_base_url: str\n        - _cache_duration: int\n        - _timeout: int\n        - _cache: Dict\n        - _cache_timestamp: Dict\n        - _param_cache: Dict\n        - _param_cache_timestamp: Dict\n        - _db_path: str\n        - _db: TinyDB\n        - _initialized: bool\n        + __new__(cls, *args, **kwargs): ParamManager\n        + __init__(self, api_url: Optional~str~ = None, cache_duration: int = 3600, timeout: int = 5): None\n        + get_instance(api_url: Optional~str~ = None, cache_duration: int = 3600, timeout: int = 5): ParamManager\n        + get_all_params(self, app_name: str): Dict\n        + get_param(self, app_name: str, param_name: str): Any\n        - _fetch_from_api(self, app_name: str, param_name: Optional~str~ = None): Dict\n        - _fetch_param_from_api(self, app_name: str, param_name: str): Any\n        - _is_cache_valid(self, app_name: str): bool\n        - _is_param_cache_valid(self, app_name: str, param_name: str): bool\n        - _save_to_local_db(self, app_name: str, params: Dict): None\n        - _get_from_local_db(self, app_name: str, param_name: Optional~str~ = None): Dict\n        - _handle_api_error(self, app_name: str, param_name: Optional~str~, error: Exception): Dict\n        + clear_cache(self, app_name: Optional~str~ = None, param_name: Optional~str~ = None): None\n        + get_cache_info(self): Dict\n    }</code></pre>"}]}